import{_ as l,c as p,aA as e,G as i,B as a,o as h}from"./chunks/framework.BKWMtcQE.js";const o="/assets/Explore_InstalledToolDir_0.2.1.4wWBxdQr.png",k="/assets/FanTools_ExampleTool_1.DirqcaLv.png",d="/assets/FanTools_ExampleTool_2.r6wprVTF.png",q=JSON.parse('{"title":"工具结构","description":"","frontmatter":{},"headers":[],"relativePath":"devtool/structure.md","filePath":"devtool/structure.md","lastUpdated":1739379048000}'),E={name:"devtool/structure.md"};function r(c,s,g,u,y,F){const n=a("NolebaseGitContributors"),t=a("NolebaseGitChangelog");return h(),p("div",null,[s[0]||(s[0]=e('<h1 id="工具结构" tabindex="-1">工具结构 <a class="header-anchor" href="#工具结构" aria-label="Permalink to &quot;工具结构&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">开发中</p><p>工具箱（尤其是工具系统）目前仍在较为早期的开发阶段，此处的工具开发指南不能代表最终品质。</p><p>目前工具箱本体更新时会覆盖更新工具目录，未来将会提供可靠的工具开发流程，还请期待（X）</p></div><h2 id="工具目录" tabindex="-1">工具目录 <a class="header-anchor" href="#工具目录" aria-label="Permalink to &quot;工具目录&quot;">​</a></h2><p>对于安装的分发版本，在安装目录下的<code>tool</code>文件夹就是其工具目录。 <img src="'+o+`" alt="安装目录下的工具目录「tool」" data-zoomable="true"></p><p>在GitHub仓库中的对应目录是仓库根目录下的<code>tool</code>文件夹。</p><h2 id="定义一个工具" tabindex="-1">定义一个工具 <a class="header-anchor" href="#定义一个工具" aria-label="Permalink to &quot;定义一个工具&quot;">​</a></h2><p>工具箱会扫描<code>tool</code>目录下的每一个子目录。如果一个子目录符合工具的定义结构，则认为其是一个合法的工具，并显示在工具页面中。</p><p>以下是合法的工具结构示例：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tool-&gt;...</span></span>
<span class="line"><span>    -&gt;hashCalculator-&gt;...</span></span>
<span class="line"><span>                    -&gt;tool.json</span></span>
<span class="line"><span>                    -&gt;run.py</span></span>
<span class="line"><span>    -&gt;public-&gt;...</span></span></code></pre></div><p>工具最少需要提供<code>tool.json</code>和<code>run.py</code>两个文件，否则无法被工具箱正确加载。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5aTon" id="tab-jP8V_hq" checked><label data-title="tool.json" for="tab-jP8V_hq">tool.json</label><input type="radio" name="group-5aTon" id="tab-T4mdXcu"><label data-title="run.py" for="tab-T4mdXcu">run.py</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hash Calculator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hashCalculator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:/app/images/icons/IconHash.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MangoFanFan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Calculate Hash of anything.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;launchMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 一般来说会在这里封装一些业务代码，然后在下面用魔法方法写调用接口（虽然严格上不能这么说，但也可以这么理解吧）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 __name__ 方法是为了提供由工具箱导入并运行的接口。launchMode为0的工具必须实现此接口。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tool.hashCalculator.run&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello FanTools!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 此外，可以制作更多类似的接口，比如最传统的。launchMode为1的工具必须实现此接口。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Goodbye FanTools!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></div></div><p><code>tool.json</code>中：</p><ul><li><code>name</code>和<code>tip</code>键的文本会在工具箱中显示；</li><li><code>icon</code>键对应的是在工具箱中显示的工具图标；</li><li><code>module</code>键必须与工具所在的文件夹一致；</li><li><code>launchMode</code>是工具的启动模式，此项正在制作，目前提供0和1两种选项，请参阅<a href="/devtool/launch_mode.html">启动模式</a>。</li><li><code>ver</code>必须是<code>x.x.x</code>格式的版本号，计划用于未来的工具管理，此项正在制作。</li><li><code>author</code>作者。</li><li><code>modules</code>（与<code>module</code>不同）是此工具中使用到的Python第三方模块，以列表[字符串]的形式呈现，若无则为空列表，请参阅<a href="/devtool/launch_mode.html">启动模式</a>。</li></ul><h2 id="创建一个工具" tabindex="-1">创建一个工具 <a class="header-anchor" href="#创建一个工具" aria-label="Permalink to &quot;创建一个工具&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bdm3t" id="tab-i3NRXvb" checked><label data-title="tool.json" for="tab-i3NRXvb">tool.json</label><input type="radio" name="group-bdm3t" id="tab-7PcOXN_"><label data-title="run.py" for="tab-7PcOXN_">run.py</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Example Tool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exampleTool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MangoFanFan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Basic example tool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;launchMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ..public.public_window </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FanWindow</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tool.exampleTool.run&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FanWindow()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w.show()</span></span></code></pre></div></div></div><p>在工具目录<code>tool/exampleTool/</code>下创建如上两个文件，即可注册一个可用的工具<code>Example Tool</code>。该工具可以打开一个空窗口，虽然它什么都干不了。 <img src="`+k+`" alt="空白窗口" data-zoomable="true"></p><p>我们创建的空窗口<code>w</code>的基类是<code>FanWindow</code>，来自工具目录下的<code>public</code>目录，基于PySide6+QFluentWidgets实现。芒果<strong>个人建议</strong>，希望接入工具箱的工具们如有GUI页面，最好使用PySide6实现GUI，以方便接入。</p><div class="tip custom-block"><p class="custom-block-title">公共代码</p><p>您可以<a href="/devtool/public_code.html">在这里</a>查看已有的公共代码，使用这些代码可以简化简单工具的开发流程。公共代码跟随芒果工具箱本体更新维护。</p></div><p>PyQt5/6、PySide2均可以较低成本地切换到PySide6。</p><p>但是谁<strong>规定</strong>只能使用Qt家的窗口？看不起Python内置窗口库Tkinter？</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cxNTF" id="tab-5hZIHUu" checked><label data-title="tool.json" for="tab-5hZIHUu">tool.json</label><input type="radio" name="group-cxNTF" id="tab-WcO-Q68"><label data-title="run.py" for="tab-WcO-Q68">run.py</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Example Tool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exampleTool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MangoFanFan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Basic example tool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;launchMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tkinter</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tkinter.Tk()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top.mainloop()</span></span></code></pre></div></div></div><p><img src="`+d+'" alt="另一个空白窗口" data-zoomable="true"></p><p>这样看来，Tkinter程序几乎可以无痛迁移为工具。</p><p>接下来，在窗口中如何布局组件，实现怎样的功能，就全靠工具开发者们的智慧啦。进阶的工具开发指南需要等待工具系统的进一步开发，目前仅作了解即可，如果您也对芒果工具箱这个项目感兴趣的话，欢迎现在就加入我们（其实只有我一个人啦）嗷！</p><div class="tip custom-block"><p class="custom-block-title">关于启动模式 launchMode</p><p>本页中介绍使用公共代码中的<code>FanWindow</code>和Python标准库<code>Tkinter</code>创建窗口时，暂时性忽略了更多的技术细节与原理。</p><p>比如，在给出的示例中，两种方法创建窗口时，<code>tool.json</code>中的<code>launchMode</code>的值并不一样。</p><p>示例仅为演示工具系统的基本操作，如果您确实对工具开发有些兴趣，请务必关注本文档中的更多内容……</p></div>',25)),i(n),i(t)])}const b=l(E,[["render",r]]);export{q as __pageData,b as default};
